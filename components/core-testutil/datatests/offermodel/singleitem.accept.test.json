{
  "description": "Tests for acceptance from a database with a single item",
  "currentOrg": "https://citadelofdanas.org/org.json",
  "listingOrgs": [
    "https://fakeorga.org/org.json",
    "https://fakeorgb.org/org.json"
  ],
  "tests": [
    {
      "description": "Check accept",
      "time": 1,
      "calls": [
        {
          "op": "UPDATE",
          "producerId": "https://citadelofdanas.org/org.json",
          "param": {
            "sourceOrgUrl": "https://citadelofdanas.org/org.json",
            "offers": [
              {
                "$model": "SimpleOffer"
              }
            ],
            "updateCurrentAsOfTimestampUTC": 0,
            "earliestNextRequestUTC": 1000
          }
        },
        {
          "op": "ACCEPT",
          "time": 2,
          "orgUrl": "https://fakeorga.org/org.json",
          "offerId": "abc"
        },
        {
          "op": "HISTORY",
          "orgUrl": "https://citadelofdanas.org/org.json",
          "time": 2,
          "payload": {},
          "expect": [
            "expect(result, 'History result should be defined').to.be.not.undefined",
            "expect(result.offerHistories.length, 'Wrong history length').to.equal(1)",
            "expect(result.offerHistories[0].acceptedAtUTC).to.equal(2)"
          ]
        },
        {
          "op": "HISTORY",
          "orgUrl": "https://fakeorga.org/org.json",
          "time": 2,
          "payload": {},
          "expect": [
            "expect(result, 'History result should be defined').to.be.not.undefined",
            "expect(result.offerHistories.length, 'Wrong history length').to.equal(1)",
            "expect(result.offerHistories[0].acceptedAtUTC).to.equal(2)"
          ]
        },
        {
          "comment": "Fakeorgb shouldn't be able to see the history of this acceptance",
          "op": "HISTORY",
          "orgUrl": "https://fakeorgb.org/org.json",
          "time": 2,
          "payload": {},
          "expect": [
            "expect(result, 'History result should be defined').to.be.not.undefined",
            "expect(result.offerHistories.length, 'Wrong history length').to.equal(0)"
          ]
        },
        {
          "op": "LIST",
          "orgUrl": "https://fakeorgb.org/org.json",
          "time": 2,
          "payload": {
            "requestedResultFormat": "SNAPSHOT"
          },
          "expect": [
            "expect(offers.length, 'Wrong number of offers').to.equal(0)"
          ]
        }
      ]
    }
  ]
}
